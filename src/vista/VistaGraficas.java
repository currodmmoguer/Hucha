/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista;

import controlador.ControladorGraficas;
import java.awt.Component;
import java.time.LocalDateTime;
import modelo.GestionDB;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.general.DefaultPieDataset;

/**
 *
 * @author curro
 */
public class VistaGraficas extends javax.swing.JPanel {

    String usuario;
    JFreeChart grafica;
    DefaultCategoryDataset datos = new DefaultCategoryDataset();

    /**
     * Creates new form VistaGraficas
     */
    public VistaGraficas(String usuario) {
        initComponents();
        this.usuario = usuario;
        mostrarGrafica();
        graficaDistribucionGasto();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        periodoComboBox = new javax.swing.JComboBox<>();
        panelEvolucion = new javax.swing.JPanel();
        panelDistribucion = new javax.swing.JPanel();

        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.LINE_AXIS));

        jPanel1.setLayout(new javax.swing.BoxLayout(jPanel1, javax.swing.BoxLayout.PAGE_AXIS));

        jLabel1.setText("Periodo");
        jPanel2.add(jLabel1);

        periodoComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Trimestral", "Semestral", "Anual" }));
        jPanel2.add(periodoComboBox);

        jPanel1.add(jPanel2);

        panelEvolucion.setLayout(new javax.swing.BoxLayout(panelEvolucion, javax.swing.BoxLayout.PAGE_AXIS));
        jPanel1.add(panelEvolucion);

        jTabbedPane1.addTab("Evolución gastos e ingresos", jPanel1);

        panelDistribucion.setLayout(new javax.swing.BoxLayout(panelDistribucion, javax.swing.BoxLayout.LINE_AXIS));
        jTabbedPane1.addTab("Distribución del gasto", panelDistribucion);

        add(jTabbedPane1);
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JPanel panelDistribucion;
    private javax.swing.JPanel panelEvolucion;
    private javax.swing.JComboBox<String> periodoComboBox;
    // End of variables declaration//GEN-END:variables

    public void mostrarGrafica(){
       
        switch (getPeriodo()){
            case "Trimestral":
                graficaEvolucionTrimestral();
                break;
            case "Semestral":
                graficaEvolucionSemestral();
                break;
            case "Anual":
                graficaEvolucionAnual();
                break;
        }
    }
    private void eliminarComponentes(){
        Component[] componentes = panelEvolucion.getComponents();
        for (Component c: componentes){
            panelEvolucion.remove(c);
        }
        
        panelEvolucion.revalidate();
        panelEvolucion.repaint();
    }
    public String getPeriodo(){
        return periodoComboBox.getSelectedItem().toString();
    }
    public void graficaEvolucionTrimestral() {
        eliminarComponentes();
        JFreeChart grafica;
        DefaultCategoryDataset datos = new DefaultCategoryDataset();
        String meses[] = new String[3];
        double ingresos[] = GestionDB.evolucionIngresosTrimestre(usuario);
        double gastos[] = GestionDB.evolucionGastosTrimestre(usuario);
        
        for (int i = meses.length -1; i >= 0; i--) {
            meses[i] = GestionDB.obtenerMes(LocalDateTime.now().minusMonths(i).getMonthValue());
            datos.addValue(ingresos[i], "Ingresos", meses[i]);
            datos.addValue(gastos[i], "Gastos", meses[i]);
        }

        grafica = ChartFactory.createBarChart("Evolucion trimestral de ingresos y gastos", null, null, datos, PlotOrientation.VERTICAL, true, true, false);
        ChartPanel panel = new ChartPanel(grafica);
        panelEvolucion.add(panel);

    }

    public void graficaEvolucionSemestral() {
        eliminarComponentes();
        JFreeChart grafica;
        DefaultCategoryDataset datos = new DefaultCategoryDataset();
        String meses[] = new String[6];
        double ingresos[] = GestionDB.evolucionIngresosSemestre(usuario);
        double gastos[] = GestionDB.evolucionGastosSemestre(usuario);
        for (int i = meses.length -1; i >= 0; i--) {
            meses[i] = GestionDB.obtenerMes(LocalDateTime.now().minusMonths(i).getMonthValue());
            datos.addValue(ingresos[i], "Ingresos", meses[i]);
            datos.addValue(gastos[i], "Gastos", meses[i]);
        }
        grafica = ChartFactory.createBarChart("Evolucion semestral de ingresos y gastos", null, null, datos, PlotOrientation.VERTICAL, true, true, false);
        ChartPanel panel = new ChartPanel(grafica);
        panelEvolucion.add(panel);
    }

    public void graficaEvolucionAnual() {
        eliminarComponentes();
        JFreeChart grafica;
        DefaultCategoryDataset datos = new DefaultCategoryDataset();
        String meses[] = new String[12];
        double ingresos[] = GestionDB.evolucionIngresosAnno(usuario);
        double gastos[] = GestionDB.evolucionGastosAnno(usuario);
        for (int i = meses.length -1; i >= 0; i--) {
            meses[i] = GestionDB.obtenerMes(LocalDateTime.now().minusMonths(i).getMonthValue());
            datos.addValue(ingresos[i], "Ingresos", meses[i]);
            datos.addValue(gastos[i], "Gastos", meses[i]);
        }
        
        
        grafica = ChartFactory.createBarChart("Evolucion anual de ingresos y gastos", null, null, datos, PlotOrientation.VERTICAL, true, true, false);
        ChartPanel panel = new ChartPanel(grafica);
        panelEvolucion.add(panel);
        
    }
    
    public void graficaDistribucionGasto(){
        Object[][] distribucion = GestionDB.distribucionGasto(usuario);
        JFreeChart grafica;
        DefaultPieDataset datos = new DefaultPieDataset();
        for (int i = 0; i < distribucion[0].length; i++){
            datos.setValue(distribucion[0][i].toString(), (double) distribucion[1][i]);
        }
        
        grafica = ChartFactory.createPieChart("Distribucion de gastos", datos);
        ChartPanel panel = new ChartPanel(grafica);
        panelDistribucion.add(panel);
        
        
    }
    
    public void addControlador(ControladorGraficas cg){
        periodoComboBox.addActionListener(cg);
        periodoComboBox.setActionCommand("PERIODO");
    }


    

    
}
